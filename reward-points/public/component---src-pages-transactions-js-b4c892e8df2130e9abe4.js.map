{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/components/customers.js","webpack:///./src/pages/transactions.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./src/pages/transactions.module.css"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","Customers","customers","selectCustomer","onChange","target","map","customer","id","firstName","lastName","calculateReward","price","TransactionRow","date","Date","toLocaleString","Tracker","useState","transactions","setTransactions","setCustomers","isStillLoadingTransactions","setIsLoadingTransactions","selectedCustomer","setSelectedCustomer","isFilteringCustomer","setIsFilteringCustomer","filteredTransactions","setFilteredTransactions","useEffect","fn","a","fetch","json","loadedTransactions","loadedCustomers","self","this","args","arguments","apply","err","undefined","loadTransactions","rewardPoints","reduce","total","calculateRewards","className","styles","tracker","src","width","alt","title","Object","values","transaction","colSpan","runtime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"component---src-pages-transactions-js-b4c892e8df2130e9abe4.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\n\nexport default function Customers({ customers, selectCustomer }) {\n  return (\n    <select onChange={({ target: { value } }) => selectCustomer(value)}>\n      <option value=\"all\">All Customers Combined</option>\n      {customers.map((customer) => (\n        <option key={customer.id} value={customer.id}>\n          {customer.firstName + \" \" + customer.lastName}\n        </option>\n      ))}\n    </select>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./index.module.css\";\nimport styles from \"./transactions.module.css\";\nimport Customers from \"../components/customers\";\n\nfunction calculateRewards(transactions) {\n  return transactions.reduce(\n    (total, { price }) => total + calculateReward(price),\n    0\n  );\n}\nfunction calculateReward(price) {\n  const doubleRewardPoints = price > 100 ? (price - 100) * 2 + 50 : 0;\n  const singleRewardPoints = price > 50 && price < 101 ? price - 50 : 0;\n\n  return singleRewardPoints + doubleRewardPoints;\n}\n\nfunction TransactionRow({ id, price, date, customer }) {\n  return (\n    <tr id={\"id-\" + id}>\n      <td>{customer.firstName + \" \" + customer.lastName}</td>\n      <td>${price}.00</td>\n      <td>{calculateReward(price)}</td>\n      <td>{new Date(date).toLocaleString()}</td>\n    </tr>\n  );\n}\n\nexport default function Tracker() {\n  const [transactions, setTransactions] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [isStillLoadingTransactions, setIsLoadingTransactions] = useState(true);\n  const [selectedCustomer, setSelectedCustomer] = useState(\"all\");\n  const [isFilteringCustomer, setIsFilteringCustomer] = useState(false);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n\n  useEffect(() => {\n    if (isStillLoadingTransactions) {\n      const loadTransactions = async () => {\n        const loadedTransactions = (\n          await (await fetch(\"../data/transactions.json\")).json()\n        ).transactions;\n        setTransactions(loadedTransactions);\n        const loadedCustomers = await (\n          await fetch(\"../data/customers.json\")\n        ).json();\n        setCustomers(loadedCustomers);\n        setIsLoadingTransactions(false);\n      };\n      loadTransactions();\n    } else {\n      setFilteredTransactions(transactions);\n    }\n  }, [isStillLoadingTransactions, transactions]);\n\n  useEffect(() => {\n    if (isFilteringCustomer) {\n      setFilteredTransactions(\n        selectedCustomer !== \"all\"\n          ? customers[selectedCustomer].transactions\n          : [...transactions]\n      );\n      setIsFilteringCustomer(false);\n    }\n  }, [isFilteringCustomer, selectedCustomer, transactions, customers]);\n\n  const selectCustomer = (customer) => {\n    setFilteredTransactions([]);\n    setIsFilteringCustomer(true);\n    setSelectedCustomer(customer);\n  };\n\n  const rewardPoints = !isStillLoadingTransactions\n    ? calculateRewards(filteredTransactions)\n    : 0;\n\n  return (\n    <main>\n      <section className={styles.tracker}>\n        <h1>\n          <img\n            src=\"../images/logo.png\"\n            width=\"300\"\n            alt=\"Apex logo\"\n            title=\"Apex Systems Rewards\"\n          />\n        </h1>\n        {!isStillLoadingTransactions ? (\n          <h2>\n            <span>\n              <Customers\n                selectCustomer={selectCustomer}\n                customers={Object.values(customers)}\n              />\n              {selectedCustomer === \"all\" ? \" have \" : \" has \"}\n              <span>{!isStillLoadingTransactions ? rewardPoints : 0}</span>{\" \"}\n              reward point{rewardPoints !== 1 ? \"s\" : \"\"}.\n            </span>\n          </h2>\n        ) : null}\n        <table>\n          <thead>\n            <tr>\n              <th>Customer Name</th>\n              <th>Price</th>\n              <th>Reward Points</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {!isStillLoadingTransactions\n              ? filteredTransactions.map((transaction) => (\n                  <TransactionRow\n                    {...transaction}\n                    key={\"id-\" + transaction.id}\n                    customer={transaction.customer}\n                  />\n                ))\n              : null}\n\n            {isStillLoadingTransactions ? (\n              <tr>\n                <td colSpan=\"5\">Loading Transactions…</td>\n              </tr>\n            ) : null}\n          </tbody>\n        </table>\n      </section>\n    </main>\n  );\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tracker\":\"transactions-module--tracker--5jmnu\"};"],"sourceRoot":""}